# This CI configuration is inspired by
#
# https://kodimensional.dev/github-actions
#
# It builds with a majority of the latest compiler releases from each major GHC
# revision on Linux and builds macOS and Windows against the latest GHC.
name: CI Matrix

# Trigger the workflow on push or pull request, but only for the master branch
on:
  pull_request:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        ghc: ['8.0.2', '8.2.2', '8.4.4', '8.6.5', '8.8.3', '8.10.1']
        cabal: ['3.2.0.0']
        os: [ubuntu-latest, macOS-latest, windows-latest]
        exclude:
          - os: macOS-latest
            ghc: 8.8.3
          - os: macOS-latest
            ghc: 8.6.5
          - os: macOS-latest
            ghc: 8.4.4
          - os: macOS-latest
            ghc: 8.2.2
          - os: macOS-latest
            ghc: 8.0.2
          - os: windows-latest
            ghc: 8.8.3
          - os: windows-latest
            ghc: 8.6.5
          - os: windows-latest
            ghc: 8.4.4
          - os: windows-latest
            ghc: 8.2.2
          - os: windows-latest
            ghc: 8.0.2
    name: Haskell GHC ${{ matrix.ghc }} on ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - uses: actions/setup-haskell@v1.1
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - uses: actions/cache@v1
      name: Cache cabal-store
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal

    - name: Build
      run: |
        cabal v2-update
        cabal v2-build all --write-ghc-environment-files=always

    - name: Haddock
      run: |
        cabal v2-haddock all

    - name: Test Interpreter
      working-directory: tests
      run: |
        cabal v2-run exe:huski -- r5rs_pitfall.scm

    - name: Test Compiler
      working-directory: tests
      run: |
        cabal v2-run exe:huskc -- compiler-run-tests.scm
        ./compiler-run-tests

    - name: Dist
      run: |
        cabal v2-sdist
